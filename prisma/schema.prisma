// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  deleted   Boolean  @default(false)
}

model Customer {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  name      String    @db.VarChar(255)
  email     String    @db.VarChar(255)
  birthdate String    @db.VarChar(255)
  address   String?   @db.VarChar(255)
  vehicle   Vehicle[]
}

model Vehicle {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deleted      Boolean   @default(false)
  plateLicense String    @db.VarChar(255)
  observations String?   @db.LongText
  receipt      Receipt[]

  CarBrand   CarBrand? @relation(fields: [carBrandId], references: [id])
  carBrandId String?
  CarModel   CarModel? @relation(fields: [carModelId], references: [id])
  carModelId String?
  CarColor   CarColor? @relation(fields: [carColorId], references: [id])
  carColorId String?
  Customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String
}

model CarBrand {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  name      String    @db.VarChar(255)
  vehicles  Vehicle[]
}

model CarModel {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  name      String    @db.VarChar(255)
  vehicles  Vehicle[]
}

model CarColor {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  name      String    @db.VarChar(255)
  vehicles  Vehicle[]
}

model Receipt {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)
  date      DateTime @default(now())
  total     Int      @db.Int

  Vehicle      Vehicle        @relation(fields: [vehicleId], references: [id])
  vehicleId    String
  ReceiptItems ReceiptItems[]
}

model ReceiptItems {
  receipt   Receipt @relation(fields: [receiptId], references: [id])
  receiptId String

  items  Item   @relation(fields: [itemId], references: [id])
  itemId String

  @@id([receiptId, itemId])
}

model Item {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleted     Boolean  @default(false)
  name        String   @db.VarChar(255)
  price       String   @db.VarChar(255)
  description String?  @db.LongText

  ReceiptItems ReceiptItems[]
}
